xof 0303txt 0032
template Frame {
 <3d82ab46-62da-11cf-ab39-0020af71e433>
 [...]
}

template Vector {
 <3d82ab5e-62da-11cf-ab39-0020af71e433>
 FLOAT x;
 FLOAT y;
 FLOAT z;
}

template MeshFace {
 <3d82ab5f-62da-11cf-ab39-0020af71e433>
 DWORD nFaceVertexIndices;
 array DWORD faceVertexIndices[nFaceVertexIndices];
}

template Mesh {
 <3d82ab44-62da-11cf-ab39-0020af71e433>
 DWORD nVertices;
 array Vector vertices[nVertices];
 DWORD nFaces;
 array MeshFace faces[nFaces];
 [...]
}

template ColorRGBA {
 <35ff44e0-6c7c-11cf-8f52-0040333594a3>
 FLOAT red;
 FLOAT green;
 FLOAT blue;
 FLOAT alpha;
}

template ColorRGB {
 <d3e16e81-7835-11cf-8f52-0040333594a3>
 FLOAT red;
 FLOAT green;
 FLOAT blue;
}

template Material {
 <3d82ab4d-62da-11cf-ab39-0020af71e433>
 ColorRGBA faceColor;
 FLOAT power;
 ColorRGB specularColor;
 ColorRGB emissiveColor;
 [...]
}

template MeshMaterialList {
 <f6f23f42-7686-11cf-8f52-0040333594a3>
 DWORD nMaterials;
 DWORD nFaceIndexes;
 array DWORD faceIndexes[nFaceIndexes];
 [Material <3d82ab4d-62da-11cf-ab39-0020af71e433>]
}

template IndexedColor
{
	<1630B820-7842-11cf-8F52-0040333594A3>
	DWORD index;
	ColorRGBA indexColor;
}

template MeshVertexColors
{
	<1630B821-7842-11cf-8F52-0040333594A3>
	DWORD nVertexColors;
	array IndexedColor vertexColors[nVertexColors];
}

Frame
{ 
	// Define a mesh with 8 vertices and 12 faces (triangles). Use 
	// optional data objects in the mesh to specify materials
	Mesh CubeMesh
	{
		24;
		-0.500000;-0.500000;-0.500000;,
		-0.500000;-0.500000;0.500000;,
		-0.500000;0.500000;0.500000;,
		-0.500000;0.500000;-0.500000;,
		-0.500000;0.500000;-0.500000;,
		-0.500000;0.500000;0.500000;,
		0.500000;0.500000;0.500000;,
		0.500000;0.500000;-0.500000;,
		0.500000;0.500000;-0.500000;,
		0.500000;0.500000;0.500000;,
		0.500000;-0.500000;0.500000;,
		0.500000;-0.500000;-0.500000;,
		-0.500000;-0.500000;0.500000;,
		-0.500000;-0.500000;-0.500000;,
		0.500000;-0.500000;-0.500000;,
		0.500000;-0.500000;0.500000;,
		-0.500000;-0.500000;0.500000;,
		0.500000;-0.500000;0.500000;,
		0.500000;0.500000;0.500000;,
		-0.500000;0.500000;0.500000;,
		-0.500000;-0.500000;-0.500000;,
		-0.500000;0.500000;-0.500000;,
		0.500000;0.500000;-0.500000;,
		0.500000;-0.500000;-0.500000;;
		12;
		3;0,1,2;,
		3;2,3,0;,
		3;4,5,6;,
		3;6,7,4;,
		3;8,9,10;,
		3;10,11,8;,
		3;12,13,14;,
		3;14,15,12;,
		3;16,17,18;,
		3;18,19,16;,
		3;20,21,22;,
		3;22,23,20;;
		
		MeshVertexColors
		{
			24;
			// Dark green
			0; 0.024000;0.098000;0.024000;1.000000;;    // (6, 25, 6)
			1; 0.024000;0.098000;0.024000;1.000000;;    // (6, 25, 6)
			2; 0.024000;0.098000;0.024000;1.000000;;    // (6, 25, 6)
			3; 0.024000;0.098000;0.024000;1.000000;;    // (6, 25, 6)
			
			// Dark red
			4; 0.098000;0.024000;0.024000;1.000000;;    // (25, 6, 6)
			5; 0.098000;0.024000;0.024000;1.000000;;    // (25, 6, 6)
			6; 0.098000;0.024000;0.024000;1.000000;;    // (25, 6, 6)
			7; 0.098000;0.024000;0.024000;1.000000;;    // (25, 6, 6)
			
			// Bright green
			8; 0.125000;1.000000;0.125000;1.000000;;    // (32, 255, 32)
			9; 0.125000;1.000000;0.125000;1.000000;;    // (32, 255, 32)
			10; 0.125000;1.000000;0.125000;1.000000;;    // (32, 255, 32)
			11; 0.125000;1.000000;0.125000;1.000000;;    // (32, 255, 32)
			
			// Bright red
			12; 1.000000;0.125000;0.125000;1.000000;;    // (255, 32, 32)
			13; 1.000000;0.125000;0.125000;1.000000;;    // (255, 32, 32)
			14; 1.000000;0.125000;0.125000;1.000000;;    // (255, 32, 32)
			15; 1.000000;0.125000;0.125000;1.000000;;    // (255, 32, 32)
			
			// Dark blue
			16; 0.024000;0.024000;0.098000;1.000000;;    // (6, 6, 25)
			17; 0.024000;0.024000;0.098000;1.000000;;    // (6, 6, 25)
			18; 0.024000;0.024000;0.098000;1.000000;;    // (6, 6, 25)
			19; 0.024000;0.024000;0.098000;1.000000;;    // (6, 6, 25)
			
			// Bright blue
			20; 0.125000;0.125000;1.000000;1.000000;;    // (32, 32, 255)
			21; 0.125000;0.125000;1.000000;1.000000;;    // (32, 32, 255)
			22; 0.125000;0.125000;1.000000;1.000000;;    // (32, 32, 255)
			23; 0.125000;0.125000;1.000000;1.000000;;;    // (32, 32, 255)
		}
	}
}